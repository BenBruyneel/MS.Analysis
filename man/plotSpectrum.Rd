% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectra_graphics.R
\name{plotSpectrum}
\alias{plotSpectrum}
\title{plotSpectrum}
\usage{
plotSpectrum(
  spectrum,
  mzLimits = NULL,
  intensityLimits = NULL,
  incrScaleIntensity = 0.05,
  scaleIntensityLocal = TRUE,
  intensityPercentage = FALSE,
  mzLabelFormat = ggplot2::waiver(),
  intensityLabelFormat = ifelse(intensityPercentage, formatDigits(0),
    formatScientificDigits(4)),
  centroidPlot = FALSE,
  cutOff = 0.01,
  labelFormat = formatDigitsLargeNumbers(4),
  spectrumDetectPeaksMethod = ifelseProper(centroidPlot, spectrumDetectPeaks.Centroid(),
    spectrumDetectPeaks.Profile()),
  labels = spectrumLabels(spectrumDetectPeaksMethod(spectrum), label = labelFormat),
  returnPeaks = FALSE,
  returnAllPeaks = FALSE,
  labelCutOff = ifelse(is.na(cutOff), 0.01, cutOff),
  labelOverlap = FALSE,
  labelSize = NA,
  labelColor = "black",
  labelAlpha = 1,
  labelAngle = 0,
  labelNudge_x = 0.02,
  labelNudge_y = 0.01,
  annotateMz = NULL,
  lineAlpha = 1,
  lineColor = "black",
  lineWidth = NA,
  lineType = "solid",
  plot.margins.default = FALSE,
  plot.margins = c(5, 15, 5, 5),
  plot.margins.units = "points",
  mzTitle = "m/z",
  intensityTitle = ifelse(intensityPercentage, "Intensity (\%)", "Intensity"),
  spectrumTitle = ggplot2::waiver(),
  spectrumSubtitle = ggplot2::waiver(),
  spectrumCaption = ggplot2::waiver(),
  generalTextSize = NA,
  generalLineWidth = NA,
  overrideLineWidth = FALSE
)
}
\arguments{
\item{spectrum}{a data.frame with "mz" & "intensity" columns}

\item{mzLimits}{two element numeric vector. Essentially the limits of the x-axis
(m/z)}

\item{intensityLimits}{two element numeric vector. Essentially the limits of the
y-axis (intensity)}

\item{incrScaleIntensity}{numeric value which specifies the factor with which to
increase the y-axis limit}

\item{scaleIntensityLocal}{logical vector which determines whether to use global
intensities (FALSE) or only the intensities of m/z's which fall within the
mzLimits (TRUE, default) for determining the maximum intensity on the y-axis.
This does nothing when using intensityLimits}

\item{intensityPercentage}{Whether to display the intensity axis in percentages
(default FALSE)}

\item{mzLabelFormat}{defines the format of the m/z (x) axis labels.
See eg \link[MS.Analysis]{formatDigits}. Default is \link[ggplot2]{waiver}
which ensures 'standard' formatting}

\item{intensityLabelFormat}{defines the format of the intensity (y) axis labels.
See eg \link[MS.Analysis]{formatDigits}}

\item{centroidPlot}{logical vector that defines whether the plot should be centroid
-like (\link[ggplot2]{geom_segment} is used) or profile-like (\link[ggplot2]{geom_line}
is used)}

\item{cutOff}{numeric vector that defines at which intensity level, below which
peaks should not be shown. Default is 0.01 which means that below 1\% of maximum
intensity the peaks won't be shown. This only works for centroid(ed) spectra.}

\item{labelFormat}{defines the format of the peak labels. See e.g. \link[MS.Analysis]{formatDigits}}

\item{spectrumDetectPeaksMethod}{defines the spectrumDetectPeaks Method to be used.
Works via function factories such as spectrumDetectPeaks.Centroid. By default
uses spectrumDetectPeaks.Centroid or spectrumDetectPeaks.Profile depending on
the centroidPlot argument}

\item{labels}{should be the result of a spectrumLabels function or NA. By default
attempts to use the spectrumDetectPeaksMethod together with the labelFormat arguments.}

\item{returnPeaks}{default is FALSE. If TRUE, then a list object is returned of which
element 1 is the peak list (detected or provided) and element 2 is the ggplot object
of the spectrum}

\item{returnAllPeaks}{default is FALSE. If TRUE then the whole peak list is returned.
If FALSE then only the peaks visible in the spectrum plot are returned. Argument is
ignored if returnPeaks is FALSE}

\item{labelCutOff}{numeric vector that defines at which intensity level, peak labels
should not be shown. Default is 0.01 which means that below 1\% of maximum intensity
the labels won't be shown}

\item{labelOverlap}{logical vector that sets the "check_overlap" argument of
\link[ggplot2]{geom_text} which is used internally for displaying labels}

\item{labelSize}{sets the size of the label text}

\item{labelColor}{sets the color of the label text}

\item{labelAlpha}{sets the alpha of the label text}

\item{labelAngle}{sets the angle of the label text}

\item{labelNudge_x}{determines how much the label should be shifted (nudged)
horizontally}

\item{labelNudge_y}{determines how much the label should be shifted (nudged)
vertically}

\item{annotateMz}{either NA or a list of annotation objects to be used, see
\link[MS.Analysis]{spectrumAnnotation}}

\item{lineAlpha}{determines alpha of the lines used for plotting the spectrum}

\item{lineColor}{determines color of the lines used for plotting the spectrum}

\item{lineWidth}{determines width of the lines used for plotting the spectrum}

\item{lineType}{determines linetype of the lines used for plotting the spectrum}

\item{plot.margins.default}{sets whether default ggplot margins are to be used
(default = FALSE)}

\item{plot.margins}{sets the plot margin sizes/widths (4 element integer vector).
Default is c(5,15,5,5)}

\item{plot.margins.units}{sets the units for the margin sizes/widths. Default
is "point"}

\item{mzTitle}{defines the label for the x-axis (m/z)}

\item{intensityTitle}{defines the label for y-axis (intensity)}

\item{spectrumTitle}{sets title of the spectrum}

\item{spectrumSubtitle}{sets subtitle of the spectrum}

\item{spectrumCaption}{sets caption of the spectrum}

\item{generalTextSize}{factor with which to increase or decrease the size of
all text elements used, except for annotateMz elements. Default is NA}

\item{generalLineWidth}{factor with which to increase or decrease the width of
all line elements used, except for annotateMz elements. Default is NA}

\item{overrideLineWidth}{if the lineWidth argument is not used (NA), then if
this argument is TRUE line width 0.5 x generalLineWidth is used, if FALSE then
the line width will be set to 0.25 x generalLineWidth}
}
\value{
a ggplot object or list of peak list (data.frame) + ggplot object
}
\description{
Creates a plot of a spectrum, m/z will be on the x-axis,
intensity on the y-axis
}
\examples{
demoFile <- fs::path_package("extdata", "spec1.csv", package = "MS.Analysis")
centroidSpectrum <- read.table(demoFile, sep = ",", header = TRUE)
plotSpectrum(centroidSpectrum, centroidPlot = TRUE)
plotSpectrum(
  centroidSpectrum,
  centroidPlot = TRUE,
  mzLimits = c(100, 500),
  labelColor = "red",
  intensityPercentage = TRUE
)
plotSpectrum(
  centroidSpectrum,
  centroidPlot = TRUE,
  mzLimits = c(100, 500),
  labelColor = "red",
  intensityPercentage = TRUE,
  cutOff = 0.05
)
demoFile <- fs::path_package("extdata", "spec2.csv", package = "MS.Analysis")
profileSpectrum <- read.table(demoFile, sep = ",", header = TRUE)
plotSpectrum(profileSpectrum, labelCutOff = 0.025)
plotSpectrum(
  profileSpectrum,
  labelCutOff = 0.05,
  mzLimits = c(550, 1000),
  intensityPercentage = TRUE,
  scaleIntensityLocal = TRUE
)
plotSpectrum(
  profileSpectrum,
  labelCutOff = 0.05,
  mzLimits = c(550, 1000),
  intensityPercentage = TRUE,
  scaleIntensityLocal = TRUE,
  spectrumDetectPeaksMethod = spectrumDetectPeaks.Profile(halfWindowSize = 25)
)
result <- plotSpectrum(
  profileSpectrum,
  labelCutOff = 0.05,
  mzLimits = c(550, 1000),
  intensityPercentage = TRUE,
  scaleIntensityLocal = TRUE,
  returnPeaks = TRUE,
  returnAllPeaks = TRUE
)
result$graph
result$peaks
plotSpectrum(
  profileSpectrum,
  labelCutOff = 0.05,
  mzLimits = c(550, 1000),
  intensityPercentage = TRUE,
  scaleIntensityLocal = TRUE,
  spectrumDetectPeaksMethod = spectrumDetectPeaks.Profile(halfWindowSize = 25),
  generalLineWidth = 2,
  generalTextSize = 20
)

}
