% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MS_functional.R
\name{spectrumDetectPeaks}
\alias{spectrumDetectPeaks}
\title{spectrumDetectPeaks}
\usage{
spectrumDetectPeaks(
  spectrum,
  halfWindowSize = 50,
  smoothing = "MAD",
  span = "cv",
  signalNoiseRatio = 2,
  intensityPercentage = FALSE,
  mzLimits = NA,
  limitNr = NA,
  limitPercentage = NA,
  highest = TRUE,
  returnInfo = FALSE,
  xtraInfo = list()
)
}
\arguments{
\item{spectrum}{data.frame with the spectra data (columns: mz & intensity )}

\item{halfWindowSize}{halfWindowSize parameter of the C_localMaxima function in
detectPeaks. Essentially seems to be the number of data points. If too narrow
the function will fail}

\item{smoothing}{smoothing used in noise estimation, two options:
"SuperSmoother" or "MAD"}

\item{span}{see \link[stats]{supsmu} (Friednan's SuperSmoother)}

\item{signalNoiseRatio}{required signal to noise ratio for a peak to be
annotated as such. Does not work for centoid(ed) data}

\item{intensityPercentage}{logical vector which defines whether intensities
should be transformed to a percentage of the highest intensity. Default is
FALSE}

\item{mzLimits}{two element numeric vector which is the m/z window between
which the returned peaks should fall (default NA, not used). Note that this
happens AFTER peak detection}

\item{limitNr}{return the limitNr highest or lowest intensity peaks. Default
is NA (= not used)}

\item{limitPercentage}{Default is NA, not used. If a numeric value than it will
cut out any peaks from the peak list that are below limitPercentage of the
highest intensity peak (set at 100\%)}

\item{highest}{default is TRUE. if the limitNr argument is used then this
argument determines if it's the highest or the lowest intensity peaks that
will be returned}

\item{returnInfo}{if the data is to be returned as a function that generates
a dataElement object (which  can be used to put in an info object)}

\item{xtraInfo}{extra info to be added to the info part in the form of a named list}
}
\value{
the peak table data.frame or a dataElement object
}
\description{
peak detection for spectra
}
\note{
originally meant for MALDI spectra, but should also work with other
types of spectra

internally the function MALDIquant::detecPeaks which does a noise
estimation via \link[stats]{supsmu} ("SuperSmoother") or \link[stats]{mad}
("MAD") and attemps to find local maxima via C-code in the package itself
through the 'y'-values and the 'halfWindowSize' ('span' argument in this
function)
}
\examples{
demoFile <- fs::path_package("extdata", "spec1.csv", package = "MS.Analysis")
centroidSpectrum <- read.table(demoFile, sep = ",", header = TRUE)
plot(centroidSpectrum, type = "h", ylim = c(0,1.5E7))

peaks <- spectrumDetectPeaks(centroidSpectrum, halfWindowSize = 3, limitNr = 10)
peaks
text(
  peaks$mz,
  peaks$intensity,
  formatMinimumDigits(2)(peaks$mz),
  cex = 0.65,
  pos = 3,
  col = "red"
)

demoFile <- fs::path_package("extdata", "spec2.csv", package = "MS.Analysis")
profileSpectrum <- read.table(demoFile, sep = ",", header = TRUE)
plot(profileSpectrum, type = "l", ylim = c(0,1.5E7))

peaks <- spectrumDetectPeaks(profileSpectrum, halfWindowSize = 50, limitNr = 7)
peaks
text(
  peaks$mz,
  peaks$intensity,
  formatMinimumDigits(2)(peaks$mz),
  cex = 0.65,
  pos = 3,
  col = "red"
)

}
