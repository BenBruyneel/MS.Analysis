% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MS_functional.R
\name{spectrumDetectPeaks.Centroid}
\alias{spectrumDetectPeaks.Centroid}
\title{spectrumDetectPeaks.Centroid}
\usage{
spectrumDetectPeaks.Centroid(
  halfWindowSize = 10,
  smoothing = "MAD",
  span = "cv",
  signalNoiseRatio = 1,
  intensityPercentage = FALSE,
  mzLimits = NA,
  limitNr = NA,
  limitPercentage = NA,
  highest = TRUE,
  returnInfo = FALSE,
  xtraInfo = list()
)
}
\arguments{
\item{halfWindowSize}{halfWindowSize parameter of the C_localMaxima function in
detectPeaks. Essentially seems to be the number of data points. If too narrow
the function will fail}

\item{smoothing}{smoothing used in noise estimation, two options:
"SuperSmoother" or "MAD"}

\item{span}{see \link[stats]{supsmu} (Friednan's SuperSmoother)}

\item{signalNoiseRatio}{required signal to noise ratio for a peak to be
annotated as such. Does not work for centoid(ed) data}

\item{intensityPercentage}{logical vector which defines whether intensities
should be transformed to a percentage of the highest intensity. Default is
FALSE}

\item{mzLimits}{two element numeric vector which is the m/z window between
which the returned peaks should fall (default NA, not used). Note that this
happens AFTER peak detection}

\item{limitNr}{return the limitNr highest or lowest intensity peaks. Default
is NA (= not used)}

\item{limitPercentage}{Default is NA, not used. If a numeric value than it will
cut out any peaks from the peak list that are below limitPercentage of the
highest intensity peak (set at 100\%)}

\item{highest}{default is TRUE. if the limitNr argument is used then this
argument determines if it's the highest or the lowest intensity peaks that
will be returned}

\item{returnInfo}{if the data is to be returned as a function that generates
a dataElement object (which  can be used to put in an info object)}

\item{xtraInfo}{extra info to be added to the info part in the form of a
named list}
}
\value{
a function that can do peak detection in a spectrum
}
\description{
function factory to generate a smoothing function for centroid(ed)
type spectra
}
\note{
essentially spectrumDetectPeaks.General with different presets/defaults
which 'usually' work for centroid(ed) data

the function generated has only one argument: 'spectrum', which is
data.frame with spectrum data
}
\examples{
demoFile <- fs::path_package("extdata", "spec1.csv", package = "MS.Analysis")
centroidSpectrum <- read.table(demoFile, sep = ",", header = TRUE)
plot(centroidSpectrum, type = "h", ylim = c(0, 1.5E7))

peaks <- spectrumDetectPeaks.Centroid()(
  centroidSpectrum
)
peaks
text(
  peaks$mz,
  peaks$intensity,
  formatMinimumDigits(2)(peaks$mz),
  cex = 0.65,
  pos = 3,
  col = "red"
)

}
