% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chromatograms_graphics.R
\name{plotChromatogramSum}
\alias{plotChromatogramSum}
\title{plotChromatogramSum}
\usage{
plotChromatogramSum(
  chromatogramList,
  chromatogramColor = "black",
  chromatogramLineType = "solid",
  chromatogramAlpha = 1,
  chromatogramWidth = 0.25,
  chromatogramAreaFill = "red",
  chromatogramAreaAlpha = 0.5,
  ...
)
}
\arguments{
\item{chromatogramList}{list of chromatograms (data.frame's with column rt &
intensity). First chromatogram is the reference, the others are summed}

\item{chromatogramColor}{color for the reference chromatogram}

\item{chromatogramLineType}{linetype for the reference chromatogram}

\item{chromatogramAlpha}{alpha for the reference chromatogram}

\item{chromatogramWidth}{linewidth for the reference chromatogram}

\item{chromatogramAreaFill}{fill color for area under summed chromatograms}

\item{chromatogramAreaAlpha}{fill alpha for area under summed chromatograms}

\item{...}{for additional parameters used in \link[MS.Analysis]{plotChromatogramOverlay}}
}
\value{
a ggplot object
}
\description{
sums a number of chromatograms and plots the area, while one
chromatogram is used as a reference of sorts. See example. A use case for
this a number of extracted ion chromatograms overlayed on top of a base peak
chromatogram.
}
\note{
all chromatograms MUST have exact same retention time data points
(x-scale). The first chromatogram on the list will be plotted w/o fill,
is e.g. BPC chromatogram, while the others (2 - ..) are summed and then used
for fill

code is not (yet) optimized and can be slow when dealing with many
chromatograms with many data points each
}
\examples{
demoFile <- fs::path_package("extdata", "Data0001.CSV", package = "MS.Analysis")
result <- readLines(demoFile, n = 9092)
result <- read.table(text = result, sep = ",", header = FALSE)[, 2:3]
colnames(result) <- c("rt", "intensity")
result <- list(result)
plotChromatogram(result[[1]], rtLimits = c(3,7))
# create parts of chromatogram imitating EIC's taking first chromatogram as bpc
result[[2]] <- result[[1]]
result[[2]]$intensity[(result[[2]]$rt <= 4.9 | result[[2]]$rt >= 5.32)] <- 0
result[[3]] <- result[[1]]
result[[3]]$intensity[(result[[3]]$rt <= 6.5 | result[[3]]$rt >= 6.7)] <- 0
plotChromatogramOverlay(chromatogramList = result,
                        chromatogramColors = c("black","red","red"),
                        rtLimits = c(3,7))
plotChromatogramSum(chromatogramList = result,
                    rtLimits = c(3,7))

}
