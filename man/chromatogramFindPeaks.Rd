% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MS_functional.R
\name{chromatogramFindPeaks}
\alias{chromatogramFindPeaks}
\title{chromatogramFindPeaks}
\usage{
chromatogramFindPeaks(
  trace,
  span = 5,
  smoothing = "SuperSmoother",
  signalNoiseRatio = 15,
  rtLimits = NA,
  limitNr = NA,
  limitPercentage = NA,
  highest = TRUE,
  returnInfo = FALSE,
  xtraInfo = list()
)
}
\arguments{
\item{trace}{data.frame with the data. Please note that the function assumes
the first column of trace to be the x-values and the second column if trace to be the y-values.}

\item{span}{halfWindowSize parameter of the C_localMaxima function in detectPeaks.
Essentially seems to be the number of data points. If too narrow the function will
fail}

\item{smoothing}{used in noise estimation, two options: "SuperSmoother" or "MAD"}

\item{signalNoiseRatio}{required signal to noise ratio for a peak to be annotated
as such}

\item{rtLimits}{two element numeric vector which is the retention time window
between which the returned peaks should fall (default NA, not used). Note that
this happens AFTER peak detection}

\item{limitNr}{return the limitNr highest or lowest intensity peaks. Default is NA,
not used}

\item{limitPercentage}{Default is NA, not used. If a numeric value than it will
cut out any peaks from the peak list that are below limitPercentage of the highest
intensity peak (set at 100\%)}

\item{highest}{default is TRUE. if the limitNr argument is used then this argument determines
if it's the highest or the lowest intensity peaks that will be returned}

\item{returnInfo}{if the data is to be returned as a function that generates a list of info
& data (which  can be used to put in an info object) via the 'readData' function}

\item{xtraInfo}{extra info to be added to the info part in the form of a named list}
}
\value{
a data.frame of the smoothed data or list of info & data
}
\description{
peak detection for chromatograms
}
\note{
originally meant for HPLC-MS chromatograms, but should also work with
other ypes of chromatograms

internally the function \link[MALDIquant]{detectPeaks} which does a noise estimation
via \link[stats]{supsmu} ("SuperSmoother") or \link[stats]{mad} ("MAD") and
attemps to find local maxima via C-code in the package itself through the
'y'-values and the 'halfWindowSize' ('span' argument in this function)

the returned data.frame contains three empty columns: left, right & area. These
exist for the findPeakArea functions
}
\examples{
demoFile <- fs::path_package("extdata", "Data0001.CSV", package = "MS.Analysis")
result <- readLines(demoFile, n = 9092)
result <- read.table(text = result, sep = ",", header = FALSE)[, 2:3]
colnames(result) <- c("rt", "intensity")
result |> head()
plot(result, type = "l")
peaks <- chromatogramFindPeaks(
  trace = result,
  smoothing = NA,
  span = 1,
  signalNoiseRatio = 5
)
peaks |> head()
text(
  peaks$peak_rt,
  peaks$peak_intensity,
  formatMinimumDigits(1)(peaks$peak_rt),
  cex = 0.65,
  pos = 3,
  col = "red"
)
# generate dataElement in stead of data.frame with peak info
peaks <- chromatogramFindPeaks(
  trace = result,
  smoothing = NA,
  span = 1,
  signalNoiseRatio = 5,
  returnInfo = TRUE
)
peaks <- peaks()
peaks
class(peaks)
peaks$info
peaks$data |> head()
peaks <- chromatogramFindPeaks(
  trace = result,
  smoothing = NA,
  span = 1,
  signalNoiseRatio = 10
)
plot(result, type = "l")
text(
  peaks$peak_rt,
  peaks$peak_intensity,
  formatMinimumDigits(1)(peaks$peak_rt),
  cex = 0.65,
  pos = 3,
  col = "red"
)
peaks <- chromatogramFindPeaks(
  trace = result,
  smoothing = NA,
  span = 1,
  signalNoiseRatio = 5,
  limitNr = 10
)
plot(result, type = "l", xlim = c(8, 15))
text(
  peaks$peak_rt,
  peaks$peak_intensity,
  formatMinimumDigits(1)(peaks$peak_rt),
  cex = 0.65,
  pos = 3,
  col = "red"
)
peaks <- chromatogramFindPeaks(
  trace = result,
  smoothing = NA,
  span = 1,
  signalNoiseRatio = 1,
  rtLimits = c(15, 20)
)
plot(result, type = "l", xlim = c(15, 20))
text(
  peaks$peak_rt,
  peaks$peak_intensity,
  formatMinimumDigits(1)(peaks$peak_rt),
  cex = 0.65,
  pos = 3,
  col = "red"
)
peaks <- chromatogramFindPeaks(
  trace = result,
  smoothing = NA,
  span = 2,
  signalNoiseRatio = 2.5,
  rtLimits = c(15, 20)
)
plot(result, type = "l", xlim = c(15, 20))
text(
  peaks$peak_rt,
  peaks$peak_intensity,
  formatMinimumDigits(1)(peaks$peak_rt),
  cex = 0.65,
  pos = 3,
  col = "red"
)
}
