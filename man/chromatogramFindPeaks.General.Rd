% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MS_functional.R
\name{chromatogramFindPeaks.General}
\alias{chromatogramFindPeaks.General}
\title{chromatogramFindPeaks.General}
\usage{
chromatogramFindPeaks.General(
  span = 5,
  smoothing = "SuperSmoother",
  signalNoiseRatio = 15,
  rtLimits = NA,
  limitNr = NA,
  limitPercentage = NA,
  highest = TRUE,
  returnInfo = FALSE
)
}
\arguments{
\item{span}{halfWindowSize parameter of the C_localMaxima function in detectPeaks.
Essentially seems to be the number of data points. If too narrow the function will
fail}

\item{smoothing}{used in noise estimation, two options: "SuperSmoother" or "MAD"}

\item{signalNoiseRatio}{required signal to noise ratio for a peak to be annotated
as such}

\item{rtLimits}{two element numeric vector which is the retention time window
between which the returned peaks should fall (default NA, not used). Note that
this happens AFTER peak detection}

\item{limitNr}{return the limitNr highest or lowest intensity peaks. Default is NA,
not used}

\item{limitPercentage}{Default is NA, not used. If a numeric value than it will
cut out any peaks from the peak list that are below limitPercentage of the highest
intensity peak (set at 100\%)}

\item{highest}{default is TRUE. if the limitNr argument is used then this argument determines
if it's the highest or the lowest intensity peaks that will be returned}

\item{returnInfo}{if the data is to be returned as a function that generates a list of info
& data (which  can be used to put in an info object) via the 'readData' function}
}
\value{
a function that generates a function to create peak lists (either in
data.frame or dataElement format
}
\description{
function factory for peak detection for chromatograms, creates a
function to do peak detection in a chromatogram.
}
\note{
the generated function takes two arguments: 'trace' (data.frame) and
'xtraInfo' (list). See \link[MS.Analysis]{chromatogramFindPeaks} for more info
}
\examples{
demoFile <- fs::path_package("extdata", "Data0001.CSV", package = "MS.Analysis")
result <- readLines(demoFile, n = 9092)
result <- read.table(text = result, sep = ",", header = FALSE)[, 2:3]
colnames(result) <- c("rt", "intensity")
result |> head()
plot(result, type = "l")
peaks <- chromatogramFindPeaks.General(
  smoothing = NA,
  span = 1,
  signalNoiseRatio = 5
)
peaks(trace = result) |> head()
peaks <- peaks(trace = result)
text(
  peaks$peak_rt,
  peaks$peak_intensity,
  formatMinimumDigits(1)(peaks$peak_rt),
  cex = 0.65,
  pos = 3,
  col = "red"
)

}
